package Form;
import Config.Koneksi;
import java.sql.Connection;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

public class FormKehadiran extends javax.swing.JFrame {
    

    private Connection conn;
    public String tgl;
    private String id_mahasiswa;
    private String id_ruang;
    public FormKehadiran() {
        initComponents();
         conn = Koneksi.getConnection();
        getData();
        nonAktifButton();
        aktifButton();
        LoadData();
        
    }
    private void getData(){
        DefaultTableModel model = (DefaultTableModel) tbl_data.getModel();
        model.setRowCount(0);
        
        try {
            String sql = "select * from kehadiran";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            while (rs.next()){
                int id = rs.getInt("id");
                String idMahasiswa = rs.getString("id_mahasiswa");
                String idRuang = rs.getString("id_ruang");
                String tanggal = rs.getString("tanggal");
                String jam = rs.getString("jam");
                String status = rs.getString("status");
                
                Object [] rowData = {id,idMahasiswa,idRuang,tanggal,jam,status};
                model.addRow(rowData);
            }
            rs.close();
            st.close();
        }catch (Exception e){
             Logger.getLogger(FormKehadiran.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void LoadData(){
        getMahasiswa();
        getRuang();
       
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t_id_mahasiswa = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        t_id_ruang = new javax.swing.JComboBox<>();
        t_tanggal = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_data = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        t_status = new javax.swing.JComboBox<>();
        btn_tambah = new javax.swing.JButton();
        btn_perbarui = new javax.swing.JButton();
        btn_batal = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        t_cari = new javax.swing.JTextField();
        t_jam = new javax.swing.JTextField();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("DATA KEHADIRAN MAHASISWA");

        jLabel2.setText("Id Mahasiswa    :");

        t_id_mahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_id_mahasiswaMouseClicked(evt);
            }
        });

        jLabel3.setText("Id Ruang           :");

        jLabel4.setText("Tanggal            :");

        t_tanggal.setDateFormatString("yyyy-MM-dd");
        t_tanggal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                t_tanggalPropertyChange(evt);
            }
        });

        tbl_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Id Mahasiswa", "Id Ruang", "Tanggal", "Jam", "Status"
            }
        ));
        tbl_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_data);

        jLabel5.setText("Jam                  :");

        jLabel6.setText("Status              :");

        t_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hadir", "Sakit", "Izin", "Alfa" }));

        btn_tambah.setText("TAMBAH");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_perbarui.setText("PERBARUI");
        btn_perbarui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_perbaruiActionPerformed(evt);
            }
        });

        btn_batal.setText("BATAL");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        btn_hapus.setText("HAPUS");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        t_cari.setText("Pencarian");
        t_cari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_cariMouseClicked(evt);
            }
        });
        t_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_cariKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(294, 294, 294))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btn_tambah)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn_perbarui)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn_batal)
                                    .addGap(18, 18, 18)
                                    .addComponent(btn_hapus))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(t_id_mahasiswa, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(181, 181, 181)))
                            .addComponent(t_id_ruang, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_status, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_jam, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(0, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(t_id_mahasiswa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_id_ruang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(t_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_jam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(t_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_tambah)
                            .addComponent(btn_perbarui)
                            .addComponent(btn_batal)
                            .addComponent(btn_hapus))
                        .addGap(49, 49, 49))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
         String date = dateFormat.format(t_tanggal.getDate());
         String jam = t_jam.getText();
         String status = t_status.getSelectedItem().toString();

    if (date.isEmpty() || jam.isEmpty() || status.isEmpty() || t_id_mahasiswa.getSelectedItem().toString().equals("Pilih Nama") || t_id_ruang.getSelectedItem().toString().equals("Pilih Ruang")) {
        JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        String sql = "INSERT INTO kehadiran (id_mahasiswa, id_ruang, tanggal, jam, status) VALUES (?,?,?,?,?)";
        PreparedStatement st = conn.prepareStatement(sql);
        
        // Assuming that id_mahasiswa and id_ruang are the first and second columns in the kehadiran table
        st.setString(1, t_id_mahasiswa.getSelectedItem().toString());
        st.setString(2, t_id_ruang.getSelectedItem().toString());
        st.setString(3, date);
        st.setString(4, jam);
        st.setString(5, status);

        int rowInserted = st.executeUpdate();
        if (rowInserted > 0) {
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");
            resetForm();
            getData(); // Assuming that getData() retrieves and updates the table data
        } else {
            JOptionPane.showMessageDialog(this, "Gagal Menambahkan Data", "Error", JOptionPane.ERROR_MESSAGE);
        }

        st.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }     
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void t_id_mahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_id_mahasiswaMouseClicked

    }//GEN-LAST:event_t_id_mahasiswaMouseClicked

    private void t_tanggalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_t_tanggalPropertyChange
                
    }
    private void getRuang(){
    try{
           DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
           model.addElement("-Pilih Ruang-");
           String sql = "select id, nama_kelas, gedung from ruang_kelas";
           PreparedStatement st = conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
           ResultSet rs = st.executeQuery();
           
           while(rs.next()){
               String namaRuang = rs.getString("id");
               model.addElement(namaRuang);
           }
           t_id_ruang.setModel(model);
           t_id_ruang.addActionListener(e->{
               int selectIndex = t_id_ruang.getSelectedIndex();
               if(selectIndex > 0){
                   try{
                   rs.absolute(selectIndex);
                   id_ruang = rs.getString("id");
                   }catch (SQLException ex){
                    ex.printStackTrace();    
                   }
               }
           });
           
        }catch (Exception e){
            e.printStackTrace();
           
        }    
    }
    private void getMahasiswa(){
        try{
           DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
           model.addElement("-Pilih Nama Mahasiswa-");
           String sql = "select id, nim, nama from mahasiswa";
           PreparedStatement st = conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
           ResultSet rs = st.executeQuery();
           
           while(rs.next()){
               String namaMahasiswa = rs.getString("id");
               model.addElement(namaMahasiswa);
           }
           t_id_mahasiswa.setModel(model);
           t_id_mahasiswa.addActionListener(e->{
               int selectIndex = t_id_mahasiswa.getSelectedIndex();
               if(selectIndex > 0){
                   try{
                   rs.absolute(selectIndex);
                   id_mahasiswa = rs.getString("id");
                   }catch (SQLException ex){
                    ex.printStackTrace();    
                   }
               }
           });
           
        }catch (Exception e){
            e.printStackTrace();
           
        }
   
    }//GEN-LAST:event_t_tanggalPropertyChange

    private void t_cariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cariKeyTyped
        DefaultTableModel model = (DefaultTableModel) tbl_data.getModel();
        model.setRowCount(0);
        
        String cari = t_cari.getText();
        
        try {
            String sql = "SELECT * FROM kehadiran WHERE id_mahasiswa LIKE ? OR id_ruang LIKE ? OR tanggal LIKE ? OR jam LIKE ? OR status LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, "%" + cari + "%");
                st.setString(2, "%" + cari + "%");
                st.setString(3, "%" + cari + "%");
                st.setString(4, "%" + cari + "%");
                st.setString(5, "%" + cari + "%");
            ResultSet rs = st.executeQuery();
            
            while (rs.next()){
                int id = rs.getInt("id");
                String id_mahasiswa = rs.getString("id_mahasiswa");
                String id_ruang = rs.getString("id_ruang");
                String tanggal = rs.getString("tanggal");
                String jam = rs.getString("jam");
                String status = rs.getString("status");
                
                Object [] rowData = {id,id_mahasiswa,id_ruang,tanggal,jam,status};
                model.addRow(rowData);
            }
            rs.close();
            st.close();
        }catch (Exception e){
             Logger.getLogger(FormMahasiswa.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_t_cariKeyTyped

    private void t_cariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_cariMouseClicked
         t_cari.setText("");
    }//GEN-LAST:event_t_cariMouseClicked

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow == -1){
        JOptionPane.showMessageDialog(this, "Pilih item yang akan dihapus");
            return;    
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION){
            String id = tbl_data.getValueAt(selectedRow, 0).toString();
            
            try {
                String sql = "DELETE FROM kehadiran WHERE id=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, id);
                
                int rowDelete = st.executeUpdate();
                if (rowDelete > 0){
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                resetForm();
                getData();
                
                }
                st.close();
                }catch (Exception e){
                Logger.getLogger(FormMahasiswa.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        resetForm();
        getData();
        aktifButton();
        nonAktifButton();
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        resetForm();
        aktifButton();
        nonAktifButton();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void btn_perbaruiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_perbaruiActionPerformed
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pilih Baris Yang Akan Diperbaharui");
            return;
        }
            String id = tbl_data.getValueAt(selectedRow, 0).toString();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dateFormat.format(t_tanggal.getDate());
            String jam = t_jam.getText();
            String status = t_status.getSelectedItem().toString();
            
            if (date.isEmpty() || jam.isEmpty() || status.isEmpty() || t_id_mahasiswa.getSelectedItem().toString().equals("Pilih Nama") || t_id_ruang.getSelectedItem().toString().equals("Pilih Ruang")) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
            }
            try {
                String sql = "UPDATE kehadiran SET id_mahasiswa=?, id_ruang=?, tanggal=?, jam=?, status=? WHERE id=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, t_id_mahasiswa.getSelectedItem().toString());
                st.setString(2, t_id_ruang.getSelectedItem().toString());
                st.setString(3, date);
                st.setString(4, jam);
                st.setString(5, status);
                st.setString(6, id);
            
                int rowUpdated = st.executeUpdate();
                if (rowUpdated > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil Diperbaharui");
                    resetForm();
                    getData();
                
                }
                st.close();
                }catch (Exception e){
                Logger.getLogger(FormKehadiran.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btn_perbaruiActionPerformed

    private void tbl_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataMouseClicked
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow != -1){
            String idMahasiswa = tbl_data.getValueAt(selectedRow, 1).toString();
            String idRuang = tbl_data.getValueAt(selectedRow, 2).toString();
            String tanggal = tbl_data.getValueAt(selectedRow, 3).toString();
            String jam = tbl_data.getValueAt(selectedRow, 4).toString();
            String status = tbl_data.getValueAt(selectedRow, 5).toString();
            
            t_id_mahasiswa.setSelectedItem(idMahasiswa);
            t_id_ruang.setSelectedItem(idRuang);
            Date Date = null;
            t_tanggal.setDate(Date);
            t_jam.setText(jam);
            t_status.setSelectedItem(status);
        }
        btn_perbarui.setEnabled(true);
        btn_tambah.setEnabled(false);
        btn_hapus.setEnabled(true);
    }//GEN-LAST:event_tbl_dataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKehadiran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_batal;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_perbarui;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField t_cari;
    private javax.swing.JComboBox<String> t_id_mahasiswa;
    private javax.swing.JComboBox<String> t_id_ruang;
    private javax.swing.JTextField t_jam;
    private javax.swing.JComboBox<String> t_status;
    private com.toedter.calendar.JDateChooser t_tanggal;
    private javax.swing.JTable tbl_data;
    // End of variables declaration//GEN-END:variables

     private void resetForm() {
        Date Date = null;
        t_tanggal.setDate(Date);
        t_jam.setText("");
        t_status.setSelectedItem("");
    }
    private void nonAktifButton() {
        btn_perbarui.setEnabled(false);
        btn_hapus.setEnabled(false);
    }

    private void aktifButton() {
        btn_tambah.setEnabled(true);
        btn_batal.setEnabled(true);
    }
}
